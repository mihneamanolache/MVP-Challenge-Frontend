{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_API_URL } from \"./constants\";\nimport { searchGateway } from \"./helpers\";\nexport const fetchData = async endpoint => {\n  try {\n    let response = await axios.get(BASE_API_URL + '/' + endpoint);\n    return response.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const fetchProjects = async () => {\n  try {\n    let response = await axios.get(BASE_API_URL + '/projects');\n    return response.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const fetchGateways = async () => {\n  try {\n    let response = await axios.get(BASE_API_URL + '/gateways');\n    return response.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const fetchReport = async data => {\n  try {\n    let response = await axios.post(BASE_API_URL + '/report', data);\n    return response.data;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const fetchGrouped = async (from, to, projectId, gatewayId) => {\n  let response = [];\n\n  try {\n    var projects = await axios.get(BASE_API_URL + '/projects');\n\n    if (projectId === '') {\n      response.projects = projects.data.data;\n    } else {\n      projects.data.data.forEach(e => {\n        if (e.projectId === projectId) {\n          response.projects = [];\n          response.projects.push(e);\n        }\n      });\n    }\n  } catch (err) {\n    throw err;\n  }\n\n  try {\n    var gateways = await axios.get(BASE_API_URL + '/gateways');\n\n    if (gatewayId === '') {\n      response.gateways = gateways.data.data;\n    } else {\n      gateways.data.data.forEach(e => {\n        if (e.gatewayId === gatewayId) {\n          response.gateways = [];\n          response.gateways.push(e);\n        }\n      });\n    }\n  } catch (err) {\n    throw err;\n  }\n\n  try {\n    let data = {\n      from: from,\n      to: to,\n      projectId: projectId,\n      gatewayId: gatewayId\n    };\n    var reports = await axios.post(BASE_API_URL + '/report', data);\n  } catch (err) {\n    throw err;\n  }\n\n  response.projects.forEach(project => {\n    let transactions = [];\n    let totalAmount = 0;\n    reports.data.data.forEach(report => {\n      if (report.projectId === project.projectId) {\n        report.gatewayName = searchGateway(gateways.data.data, report);\n        transactions.push(report);\n        totalAmount += report.amount;\n      }\n    });\n    project.transactions = transactions;\n    project.totalAmount = totalAmount.toFixed(2);\n  });\n  response.gateways.forEach(gateway => {\n    let transactions = [];\n    let totalAmount = 0;\n    reports.data.data.forEach(report => {\n      if (report.gatewayId === gateway.gatewayId) {\n        transactions.push(report);\n        totalAmount += report.amount;\n      }\n    });\n    gateway.transactions = transactions;\n    gateway.totalAmount = totalAmount.toFixed(2);\n  });\n  console.log(response);\n  return response;\n};","map":{"version":3,"names":["axios","BASE_API_URL","searchGateway","fetchData","endpoint","response","get","data","err","fetchProjects","fetchGateways","fetchReport","post","fetchGrouped","from","to","projectId","gatewayId","projects","forEach","e","push","gateways","reports","project","transactions","totalAmount","report","gatewayName","amount","toFixed","gateway","console","log"],"sources":["/Users/laptop/Desktop/MVP/client/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_API_URL } from \"./constants\";\nimport { searchGateway } from \"./helpers\";\n\nexport const fetchData = async (endpoint) => {\n    try {\n        let response = await axios.get(BASE_API_URL + '/' + endpoint)\n        return response.data\n    } catch ( err ) {\n        throw err\n    }\n\n}\n\nexport const fetchProjects = async () => {\n    try {\n        let response = await axios.get(BASE_API_URL + '/projects')\n        return response.data\n    } catch ( err ) {\n        throw err\n    }\n\n}\n\nexport const fetchGateways = async () => {\n    try {\n        let response = await axios.get(BASE_API_URL + '/gateways')\n        return response.data\n    } catch ( err ) {\n        throw err\n    }\n\n}\n\nexport const fetchReport = async (data) => {\n    try {\n        let response = await axios.post(BASE_API_URL + '/report', data)\n        return response.data\n    } catch ( err ) {\n        throw err\n    }\n\n}\n\nexport const fetchGrouped = async (from, to, projectId, gatewayId) => {\n    let response = []\n    try {\n        var projects = await axios.get(BASE_API_URL + '/projects')\n        if ( projectId === '' ) {\n            response.projects = projects.data.data\n        } else {\n            projects.data.data.forEach((e) => {\n                if ( e.projectId === projectId ) {\n                    response.projects = []\n                    response.projects.push(e)\n                }\n            })\n        }\n    } catch ( err ) {\n        throw err\n    }\n\n    try {\n        var gateways = await axios.get(BASE_API_URL + '/gateways')\n        if ( gatewayId === '' ) {\n            response.gateways = gateways.data.data\n        } else {\n            gateways.data.data.forEach((e) => {\n                if ( e.gatewayId === gatewayId ) {\n                    response.gateways = []\n                    response.gateways.push(e)\n                }\n            })\n        }\n        \n    } catch ( err ) {\n        throw err\n    }\n\n    try {\n        let data = {from:from, to:to, projectId:projectId, gatewayId:gatewayId}\n        var reports = await axios.post(BASE_API_URL + '/report', data)\n    } catch ( err ) {\n        throw err\n    }\n\n    response.projects.forEach(project => {\n        let transactions = []\n        let totalAmount = 0\n        reports.data.data.forEach(report => {\n            if ( report.projectId === project.projectId ) {\n                report.gatewayName = searchGateway(gateways.data.data, report)\n                transactions.push(report)\n                totalAmount += report.amount\n            }\n        });\n        project.transactions = transactions\n        project.totalAmount = totalAmount.toFixed(2)\n    });\n\n    response.gateways.forEach(gateway => {\n        let transactions = []\n        let totalAmount = 0\n        reports.data.data.forEach(report => {\n            if ( report.gatewayId === gateway.gatewayId ) { \n                transactions.push(report)\n                totalAmount += report.amount\n            }\n        });\n        gateway.transactions = transactions\n        gateway.totalAmount = totalAmount.toFixed(2)\n    })\n\n    console.log(response)\n\n    return response\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}